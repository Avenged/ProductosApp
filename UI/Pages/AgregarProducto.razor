@page "/AgregarProducto"
@using Application;
@using Application.DTOs;
@using ProductosApp.Data;

@inject NavigationManager NM
@inject NotificationService NS
@inject DialogService DialogService
@inject IProductService ProductService

<PageTitle>Agregar Productos</PageTitle>

<h3>Agregar Producto</h3>


<RadzenTemplateForm Data="@productos">
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack>
                <RadzenFieldset Text="Producto">
                    <RadzenStack Gap="1rem">
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Nombre" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox Style="width: 100%;" Name="Name" @bind-Value="@name"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Precio" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenNumeric  Style="width: 100%;" Name="Precio" @bind-Value="@precio"/>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Unidades" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenNumeric Style="width: 100%;" Name="Unidades" @bind-Value="@unidades" />
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" Click="@Submit"/>
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Icon="cancel" Text="Cancel" Click="@Cancel" />
    </RadzenStack>
</RadzenTemplateForm>

@code {
    private IEnumerable<ProductoDTO> productos;

    public string name;
    public decimal precio;
    public int unidades;

    private async Task Submit()
    {
        var result = await DialogService.Confirm("Desea agregar el producto?", "Validacion", new ConfirmOptions() { OkButtonText = "Si", CancelButtonText = "No" });

        if (result == false || result is null)
        {
            return;
        }

        try
        {
            await ProductService.AgregarProducto(name,precio,unidades);

            NS.Notify(new NotificationMessage
                {
                    Summary = "Operación exitosa",
                    Detail = "Producto agregado satisfactoriamente",
                    Severity = NotificationSeverity.Success,
                    Duration = 10000,
                });
        }
        catch (InvalidOperationException ex)
        {
            NS.Notify(new NotificationMessage
                {
                    Summary = "Error de validación",
                    Detail = $"{ex.Message}",
                    Severity = NotificationSeverity.Warning,
                    Duration = 10000,
                });
        }
        catch (Exception ex)
        {
            NS.Notify(new NotificationMessage
                {
                    Summary = "Ocurrió un error",
                    Detail = $"No se pudo agregar el producto. Contáctese con su administrador.",
                    Severity = NotificationSeverity.Error,
                    Duration = 10000,
                });
        }

        NM.NavigateTo("/");
    }

    void Cancel()
    {
        NM.NavigateTo("/");
    }

}
